
globals:
   - id: my_global_int
     type: int
     restore_value: no
     initial_value: '0'

esp8266:
  board: d1_mini

# Enable logging
logger:
  level: VERBOSE #makes uart stream available in esphome logstream
  baud_rate: 0 #disable logging over uart

# Enable Home Assistant API
api:
  encryption:
    key: "xxxxxxxxxxxxxxx"


ota:
  password: "xxxxxxxxxxxxxxxxxxxxx"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Hwc-Monitor Fallback Hotspot"
    password: "xxxxxxxxxxxxxx"

captive_portal:

uart:
  id: uart_bus
  tx_pin: GPIO1 #D3
  rx_pin: GPIO3 #D4
  baud_rate: 57600

text_sensor:
- platform: custom
  lambda: |-
    auto my_custom_sensor = new UartReadLineSensor(id(uart_bus));
    App.register_component(my_custom_sensor);
    return {my_custom_sensor};
  text_sensors:
    name: "HWC Data Sensor"
    id: "uart_readline"    
    
switch:
  - platform: uart
    name: "Send_R"
    data: 'R'
